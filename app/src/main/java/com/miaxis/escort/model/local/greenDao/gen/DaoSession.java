package com.miaxis.escort.model.local.greenDao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.miaxis.escort.model.entity.BankBean;
import com.miaxis.escort.model.entity.BoxBean;
import com.miaxis.escort.model.entity.Config;
import com.miaxis.escort.model.entity.EscortBean;
import com.miaxis.escort.model.entity.OpdateBean;
import com.miaxis.escort.model.entity.TaskBean;
import com.miaxis.escort.model.entity.TaskBoxBean;
import com.miaxis.escort.model.entity.TaskEscortBean;
import com.miaxis.escort.model.entity.TaskExeBean;
import com.miaxis.escort.model.entity.TaskReqBean;
import com.miaxis.escort.model.entity.TempDeptBean;
import com.miaxis.escort.model.entity.UpdateInfo;
import com.miaxis.escort.model.entity.WorkerBean;

import com.miaxis.escort.model.local.greenDao.gen.BankBeanDao;
import com.miaxis.escort.model.local.greenDao.gen.BoxBeanDao;
import com.miaxis.escort.model.local.greenDao.gen.ConfigDao;
import com.miaxis.escort.model.local.greenDao.gen.EscortBeanDao;
import com.miaxis.escort.model.local.greenDao.gen.OpdateBeanDao;
import com.miaxis.escort.model.local.greenDao.gen.TaskBeanDao;
import com.miaxis.escort.model.local.greenDao.gen.TaskBoxBeanDao;
import com.miaxis.escort.model.local.greenDao.gen.TaskEscortBeanDao;
import com.miaxis.escort.model.local.greenDao.gen.TaskExeBeanDao;
import com.miaxis.escort.model.local.greenDao.gen.TaskReqBeanDao;
import com.miaxis.escort.model.local.greenDao.gen.TempDeptBeanDao;
import com.miaxis.escort.model.local.greenDao.gen.UpdateInfoDao;
import com.miaxis.escort.model.local.greenDao.gen.WorkerBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bankBeanDaoConfig;
    private final DaoConfig boxBeanDaoConfig;
    private final DaoConfig configDaoConfig;
    private final DaoConfig escortBeanDaoConfig;
    private final DaoConfig opdateBeanDaoConfig;
    private final DaoConfig taskBeanDaoConfig;
    private final DaoConfig taskBoxBeanDaoConfig;
    private final DaoConfig taskEscortBeanDaoConfig;
    private final DaoConfig taskExeBeanDaoConfig;
    private final DaoConfig taskReqBeanDaoConfig;
    private final DaoConfig tempDeptBeanDaoConfig;
    private final DaoConfig updateInfoDaoConfig;
    private final DaoConfig workerBeanDaoConfig;

    private final BankBeanDao bankBeanDao;
    private final BoxBeanDao boxBeanDao;
    private final ConfigDao configDao;
    private final EscortBeanDao escortBeanDao;
    private final OpdateBeanDao opdateBeanDao;
    private final TaskBeanDao taskBeanDao;
    private final TaskBoxBeanDao taskBoxBeanDao;
    private final TaskEscortBeanDao taskEscortBeanDao;
    private final TaskExeBeanDao taskExeBeanDao;
    private final TaskReqBeanDao taskReqBeanDao;
    private final TempDeptBeanDao tempDeptBeanDao;
    private final UpdateInfoDao updateInfoDao;
    private final WorkerBeanDao workerBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bankBeanDaoConfig = daoConfigMap.get(BankBeanDao.class).clone();
        bankBeanDaoConfig.initIdentityScope(type);

        boxBeanDaoConfig = daoConfigMap.get(BoxBeanDao.class).clone();
        boxBeanDaoConfig.initIdentityScope(type);

        configDaoConfig = daoConfigMap.get(ConfigDao.class).clone();
        configDaoConfig.initIdentityScope(type);

        escortBeanDaoConfig = daoConfigMap.get(EscortBeanDao.class).clone();
        escortBeanDaoConfig.initIdentityScope(type);

        opdateBeanDaoConfig = daoConfigMap.get(OpdateBeanDao.class).clone();
        opdateBeanDaoConfig.initIdentityScope(type);

        taskBeanDaoConfig = daoConfigMap.get(TaskBeanDao.class).clone();
        taskBeanDaoConfig.initIdentityScope(type);

        taskBoxBeanDaoConfig = daoConfigMap.get(TaskBoxBeanDao.class).clone();
        taskBoxBeanDaoConfig.initIdentityScope(type);

        taskEscortBeanDaoConfig = daoConfigMap.get(TaskEscortBeanDao.class).clone();
        taskEscortBeanDaoConfig.initIdentityScope(type);

        taskExeBeanDaoConfig = daoConfigMap.get(TaskExeBeanDao.class).clone();
        taskExeBeanDaoConfig.initIdentityScope(type);

        taskReqBeanDaoConfig = daoConfigMap.get(TaskReqBeanDao.class).clone();
        taskReqBeanDaoConfig.initIdentityScope(type);

        tempDeptBeanDaoConfig = daoConfigMap.get(TempDeptBeanDao.class).clone();
        tempDeptBeanDaoConfig.initIdentityScope(type);

        updateInfoDaoConfig = daoConfigMap.get(UpdateInfoDao.class).clone();
        updateInfoDaoConfig.initIdentityScope(type);

        workerBeanDaoConfig = daoConfigMap.get(WorkerBeanDao.class).clone();
        workerBeanDaoConfig.initIdentityScope(type);

        bankBeanDao = new BankBeanDao(bankBeanDaoConfig, this);
        boxBeanDao = new BoxBeanDao(boxBeanDaoConfig, this);
        configDao = new ConfigDao(configDaoConfig, this);
        escortBeanDao = new EscortBeanDao(escortBeanDaoConfig, this);
        opdateBeanDao = new OpdateBeanDao(opdateBeanDaoConfig, this);
        taskBeanDao = new TaskBeanDao(taskBeanDaoConfig, this);
        taskBoxBeanDao = new TaskBoxBeanDao(taskBoxBeanDaoConfig, this);
        taskEscortBeanDao = new TaskEscortBeanDao(taskEscortBeanDaoConfig, this);
        taskExeBeanDao = new TaskExeBeanDao(taskExeBeanDaoConfig, this);
        taskReqBeanDao = new TaskReqBeanDao(taskReqBeanDaoConfig, this);
        tempDeptBeanDao = new TempDeptBeanDao(tempDeptBeanDaoConfig, this);
        updateInfoDao = new UpdateInfoDao(updateInfoDaoConfig, this);
        workerBeanDao = new WorkerBeanDao(workerBeanDaoConfig, this);

        registerDao(BankBean.class, bankBeanDao);
        registerDao(BoxBean.class, boxBeanDao);
        registerDao(Config.class, configDao);
        registerDao(EscortBean.class, escortBeanDao);
        registerDao(OpdateBean.class, opdateBeanDao);
        registerDao(TaskBean.class, taskBeanDao);
        registerDao(TaskBoxBean.class, taskBoxBeanDao);
        registerDao(TaskEscortBean.class, taskEscortBeanDao);
        registerDao(TaskExeBean.class, taskExeBeanDao);
        registerDao(TaskReqBean.class, taskReqBeanDao);
        registerDao(TempDeptBean.class, tempDeptBeanDao);
        registerDao(UpdateInfo.class, updateInfoDao);
        registerDao(WorkerBean.class, workerBeanDao);
    }
    
    public void clear() {
        bankBeanDaoConfig.clearIdentityScope();
        boxBeanDaoConfig.clearIdentityScope();
        configDaoConfig.clearIdentityScope();
        escortBeanDaoConfig.clearIdentityScope();
        opdateBeanDaoConfig.clearIdentityScope();
        taskBeanDaoConfig.clearIdentityScope();
        taskBoxBeanDaoConfig.clearIdentityScope();
        taskEscortBeanDaoConfig.clearIdentityScope();
        taskExeBeanDaoConfig.clearIdentityScope();
        taskReqBeanDaoConfig.clearIdentityScope();
        tempDeptBeanDaoConfig.clearIdentityScope();
        updateInfoDaoConfig.clearIdentityScope();
        workerBeanDaoConfig.clearIdentityScope();
    }

    public BankBeanDao getBankBeanDao() {
        return bankBeanDao;
    }

    public BoxBeanDao getBoxBeanDao() {
        return boxBeanDao;
    }

    public ConfigDao getConfigDao() {
        return configDao;
    }

    public EscortBeanDao getEscortBeanDao() {
        return escortBeanDao;
    }

    public OpdateBeanDao getOpdateBeanDao() {
        return opdateBeanDao;
    }

    public TaskBeanDao getTaskBeanDao() {
        return taskBeanDao;
    }

    public TaskBoxBeanDao getTaskBoxBeanDao() {
        return taskBoxBeanDao;
    }

    public TaskEscortBeanDao getTaskEscortBeanDao() {
        return taskEscortBeanDao;
    }

    public TaskExeBeanDao getTaskExeBeanDao() {
        return taskExeBeanDao;
    }

    public TaskReqBeanDao getTaskReqBeanDao() {
        return taskReqBeanDao;
    }

    public TempDeptBeanDao getTempDeptBeanDao() {
        return tempDeptBeanDao;
    }

    public UpdateInfoDao getUpdateInfoDao() {
        return updateInfoDao;
    }

    public WorkerBeanDao getWorkerBeanDao() {
        return workerBeanDao;
    }

}
